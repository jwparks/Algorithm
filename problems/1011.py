#N = int(input())
N = 1
for i in range(N):
    A, B = map(int, input().split())
    length = B-A
    if length == 1:
        print(1)
    elif length%2 == 0:
        print(int(length/2 + 1))
    else:
        print(int((length-1)/2 + 2))

# 3(3): 1-1-1
# 4(3): 1-2-1
# 5(4): 1-2-2-1
# 6(4): 1-2-2-1
# 7(5): 1-2-2-1-1
# 8(5): 1-2-2-2-1
# 9(5): 1-2-3-2-1
# 10(6): 1-2-2-2-2-1
# 11(6): 1-2-3-2-2-1
# 12(6): 1-2-3-3-2-1
# 13(7): 1-2-3-3-2-1-1
# 14(7): 1-2-3-3-2-2-1
# 15(7): 1-2-3-3-3-2-1
# 16(7): 1-2-3-4-3-2-1
# 17(8): 1-2-3-4-3-2-1-1
# 첫 항이 1이고, 개수가 n, 공차가 1인 등차수열의 합
# S = n*(2+(n-1))/2
# 갈 수 있는 최대 거리는 해당 합의 두배: n*(2+(n-1))
# 즉 n번 이동할 때, 최대 거리는 (n/2)*(2+(n/2-1))
# 홀수번 이동 할 때는
# (n/2)*(2+(n/2-1)) - (n/2)

# max(M)(N): (N/2)(N/2-1) (N/2)